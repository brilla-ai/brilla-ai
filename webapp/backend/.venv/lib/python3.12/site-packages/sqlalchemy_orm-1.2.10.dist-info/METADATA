Metadata-Version: 2.1
Name: sqlalchemy-orm
Version: 1.2.10
Summary: Data Relation Mapping framework for Python.
Home-page: https://gitlab.com/parob/sqlalchemy-orm
Download-URL: https://gitlab.com/parob/sqlalchemy-orm/-/archive/v1.2.10/sqlalchemy-orm-v1.2.10.tar.gz
Author: Robert Parker
Author-email: rob@parob.com
License: MIT
Keywords: SQLAlchemy,ORM
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: SQLAlchemy
Requires-Dist: inflection
Requires-Dist: cached-property
Requires-Dist: typing-inspect
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: faker ; extra == 'dev'

# SQLAlchemy-ORM
ORM framework for Python. Designed for simplicity, based on [SQLAlchemy](https://www.sqlalchemy.org/).

[![coverage report](https://gitlab.com/parob/sqlalchemy-orm/badges/master/coverage.svg)](https://gitlab.com/parob/sqlalchemy-orm/commits/master)

[![pipeline status](https://gitlab.com/parob/sqlalchemy-orm/badges/master/pipeline.svg)](https://gitlab.com/parob/sqlalchemy-orm/commits/master)


Check out the tests directory for more examples.

## Basic Example
``` python
from sqlalachemy_orm import Model, Database

Base = Model()

class Animal(Base):
    name: str
    age: int

db = Database("sqlite:///:memory:") # use an in-memory SQLite database
db.create(Animal)  # Create the `Animal` table in the database

bea = Animal(name="bea", age=5)

session = db.session()
session.create(bea) # Create a row in the `Animal` table

print(session.query(Animal).filter(Animal.name == "bea").one())

session.commit() # commit the session to the database
```

``` text
$ python example.py
>>> Animal(name='bea', age=5)
```
