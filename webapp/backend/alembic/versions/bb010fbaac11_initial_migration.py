"""Initial migration

Revision ID: bb010fbaac11
Revises: 
Create Date: 2024-09-30 04:17:06.078218

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bb010fbaac11'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_invite_users_email', table_name='invite_users')
    op.drop_index('ix_invite_users_id', table_name='invite_users')
    op.drop_index('ix_invite_users_invite_code', table_name='invite_users')
    op.drop_table('invite_users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invite_users',
    sa.Column('email', sa.VARCHAR(length=2004), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('admin', 'user', 'moderator', name='role'), autoincrement=False, nullable=True),
    sa.Column('full_name', sa.VARCHAR(length=2004), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('invite_code', sa.VARCHAR(length=2004), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='invite_users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_invite_users_invite_code', 'invite_users', ['invite_code'], unique=True)
    op.create_index('ix_invite_users_id', 'invite_users', ['id'], unique=False)
    op.create_index('ix_invite_users_email', 'invite_users', ['email'], unique=True)
    op.create_table('users',
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=2004), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=2004), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(length=2004), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('admin', 'user', 'moderator', name='role'), autoincrement=False, nullable=True),
    sa.Column('invite_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['invite_id'], ['invite_users.id'], name='users_invite_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    # ### end Alembic commands ###
